/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>
#include <string.h>


void delay(void)
{
	for(uint32_t i = 0; i < 50000/2; i++);
}
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

struct GPIO
{
	uint32_t CRL,CRH,IDR,ODR,BSSR,BRR,LCKR;
};

struct SPI
{
	uint32_t CR1, CR2, SR, DR, CRCPR, RX_CRC, TX_CRC;
};

struct TIM
{
	uint32_t CR1, CR2, RESERVED1, DIER, SR, EGR, RESERVED2,RESERVED3,RESERVED4,CNT,PSC,ARR;
};

#define GPIOA ((struct GPIO *) 0x40010800)
#define GPIOB ((struct GPIO *) 0x40010C00)
#define GPIOC ((struct GPIO *) 0x40011000)
#define SPI1 ((struct SPI *) 0x40013000)

#define LED_NUM_4_CLEAR() 		(GPIOA->ODR &= ~(127 << 0))
#define LED_NUM_4_0_ENABLE() 	(GPIOA->ODR |= 1)
#define LED_NUM_4_1_ENABLE() 	(GPIOA->ODR |= 1 << 1)
#define LED_NUM_4_2_ENABLE() 	(GPIOA->ODR |= 1 << 2)
#define LED_NUM_4_3_ENABLE() 	(GPIOA->ODR |= 1 << 3)
#define LED_NUM_4_4_ENABLE() 	(GPIOA->ODR |= 1 << 4)
#define LED_NUM_4_5_ENABLE() 	(GPIOA->ODR |= 1 << 5)
#define LED_NUM_4_6_ENABLE() 	(GPIOA->ODR |= 1 << 6)



int main(void)
{


    /* Loop forever */
	uint32_t *RCC_APB2ENR = (uint32_t *)(0x40021018);
	uint32_t *RCC_APHBENR = (uint32_t *)(0x40021014);


	//Enable clock on GPIOA
	*RCC_APB2ENR |= (1 << 2);

	uint32_t temp = 0;
	temp |= (1<< 0);
	temp |= (1<< 4);
	temp |= (1<< 8);
	temp |= (1<< 12);
	temp |= (1<< 16);
	temp |= (1<< 20);
	temp |= (1<< 24);
	GPIOA->CRL = temp;

	LED_NUM_4_CLEAR();
	LED_NUM_4_0_ENABLE();










	while(1);

}






